Experiment Results
==================

Algorithm 1: Exact_Baseline
--------------------------
Candidates Set: {(0, 1): (np.float64(1.15), np.float64(1.2)), (0, 2): (np.float64(0.5), np.float64(0.5)), (0, 3): (np.float64(0.15000000000000002), np.float64(0.30000000000000004)), (0, 4): (np.float64(0.44999999999999996), np.float64(0.65)), (0, 5): (np.float64(0.3), np.float64(0.4)), (0, 6): (np.float64(0.25), np.float64(0.4)), (0, 7): (np.float64(1.0), np.float64(1.15)), (0, 8): (np.float64(1.0), np.float64(1.05)), (0, 9): (np.float64(0.4), np.float64(0.55)), (0, 10): (np.float64(1.05), np.float64(1.05)), (0, 11): (np.float64(0.25), np.float64(0.25)), (0, 12): (np.float64(0.15), np.float64(0.25)), (0, 13): (np.float64(0.9), np.float64(0.9)), (0, 14): (np.float64(0.4), np.float64(0.5)), (1, 2): (np.float64(0.95), np.float64(1.1)), (1, 3): (np.float64(1.2), np.float64(1.4)), (1, 4): (np.float64(1.1), np.float64(1.25)), (1, 5): (np.float64(1.45), np.float64(1.5)), (1, 6): (np.float64(0.7), np.float64(0.8999999999999999)), (1, 7): (np.float64(0.8500000000000001), np.float64(0.95)), (1, 8): (np.float64(1.35), np.float64(1.45)), (1, 9): (np.float64(1.35), np.float64(1.45)), (1, 10): (np.float64(1.0), np.float64(1.15)), (1, 11): (np.float64(0.8), np.float64(0.9500000000000001)), (1, 12): (np.float64(1.4), np.float64(1.65)), (1, 13): (np.float64(0.9500000000000001), np.float64(1.0)), (1, 14): (np.float64(0.95), np.float64(1.2000000000000002)), (2, 3): (np.float64(0.75), np.float64(0.9)), (2, 4): (np.float64(1.0499999999999998), np.float64(1.25)), (2, 5): (np.float64(1.3), np.float64(1.3)), (2, 6): (np.float64(1.25), np.float64(1.4)), (2, 7): (np.float64(1.2000000000000002), np.float64(1.45)), (2, 8): (np.float64(0.8999999999999999), np.float64(0.95)), (2, 9): (np.float64(1.2), np.float64(1.35)), (2, 10): (np.float64(0.75), np.float64(0.8500000000000001)), (2, 11): (np.float64(1.25), np.float64(1.35)), (2, 12): (np.float64(0.44999999999999996), np.float64(0.44999999999999996)), (2, 13): (np.float64(1.4), np.float64(1.5)), (2, 14): (np.float64(0.8999999999999999), np.float64(1.0)), (3, 4): (np.float64(0.6000000000000001), np.float64(0.75)), (3, 5): (np.float64(0.75), np.float64(0.7999999999999999)), (3, 6): (np.float64(0.4), np.float64(0.7)), (3, 7): (np.float64(0.45), np.float64(0.55)), (3, 8): (np.float64(0.95), np.float64(1.25)), (3, 9): (np.float64(1.05), np.float64(1.15)), (3, 10): (np.float64(1.2), np.float64(1.35)), (3, 11): (np.float64(1.1), np.float64(1.15)), (3, 12): (np.float64(0.6000000000000001), np.float64(0.75)), (3, 13): (np.float64(1.45), np.float64(1.5)), (3, 14): (np.float64(1.25), np.float64(1.3)), (4, 5): (np.float64(0.44999999999999996), np.float64(0.65)), (4, 6): (np.float64(0.7), np.float64(0.95)), (4, 7): (np.float64(1.05), np.float64(1.2000000000000002)), (4, 8): (np.float64(1.55), np.float64(1.7)), (4, 9): (np.float64(1.25), np.float64(1.5)), (4, 10): (np.float64(1.2000000000000002), np.float64(1.5)), (4, 11): (np.float64(1.0), np.float64(1.2)), (4, 12): (np.float64(0.6), np.float64(0.8)), (4, 13): (np.float64(1.15), np.float64(1.35)), (4, 14): (np.float64(1.25), np.float64(1.4500000000000002)), (5, 6): (np.float64(0.75), np.float64(0.7999999999999999)), (5, 7): (np.float64(1.0), np.float64(1.15)), (5, 8): (np.float64(0.8), np.float64(0.95)), (5, 9): (np.float64(1.3), np.float64(1.35)), (5, 10): (np.float64(0.25), np.float64(0.25)), (5, 11): (np.float64(0.45), np.float64(0.8500000000000001)), (5, 12): (np.float64(0.44999999999999996), np.float64(0.65)), (5, 13): (np.float64(0.8), np.float64(1.0)), (5, 14): (np.float64(0.7), np.float64(0.8)), (6, 7): (np.float64(0.65), np.float64(0.85)), (6, 8): (np.float64(1.45), np.float64(1.55)), (6, 9): (np.float64(0.65), np.float64(0.8500000000000001)), (6, 10): (np.float64(1.2), np.float64(1.35)), (6, 11): (np.float64(0.1), np.float64(0.25)), (6, 12): (np.float64(0.6000000000000001), np.float64(0.65)), (6, 13): (np.float64(0.95), np.float64(1.1)), (6, 14): (np.float64(1.0499999999999998), np.float64(1.2000000000000002)), (7, 8): (np.float64(0.8), np.float64(1.0)), (7, 9): (np.float64(0.8), np.float64(1.0)), (7, 10): (np.float64(0.55), np.float64(0.6000000000000001)), (7, 11): (np.float64(0.75), np.float64(0.8)), (7, 12): (np.float64(0.85), np.float64(0.8999999999999999)), (7, 13): (np.float64(0.8), np.float64(0.9500000000000001)), (7, 14): (np.float64(1.4), np.float64(1.45)), (8, 9): (np.float64(1.3), np.float64(1.5)), (8, 10): (np.float64(0.75), np.float64(1.0)), (8, 11): (np.float64(0.75), np.float64(0.8)), (8, 12): (np.float64(1.55), np.float64(1.6)), (8, 13): (np.float64(1.0), np.float64(1.05)), (8, 14): (np.float64(1.7), np.float64(1.75)), (9, 10): (np.float64(1.05), np.float64(1.2)), (9, 11): (np.float64(0.75), np.float64(0.8)), (9, 12): (np.float64(1.05), np.float64(1.2)), (9, 13): (np.float64(1.4), np.float64(1.55)), (9, 14): (np.float64(1.4), np.float64(1.55)), (10, 11): (np.float64(0.8), np.float64(1.0)), (10, 12): (np.float64(0.6000000000000001), np.float64(0.7)), (10, 13): (np.float64(1.15), np.float64(1.15)), (10, 14): (np.float64(1.05), np.float64(1.15)), (11, 12): (np.float64(0.8), np.float64(0.8)), (11, 13): (np.float64(0.55), np.float64(0.65)), (11, 14): (np.float64(1.15), np.float64(1.25)), (12, 13): (np.float64(0.55), np.float64(0.65)), (12, 14): (np.float64(0.44999999999999996), np.float64(0.5499999999999999)), (13, 14): (np.float64(1.5), np.float64(1.5))}
Execution Time: 78.3247 seconds
API Calls: 120
Entropy (dep) over time: (0, None)

Algorithm 2: Naive
-----------------
Candidates Set: {(8, 14): (np.float64(1.7), np.float64(1.75))}
Execution Time: 36.0407 seconds
API Calls: 53
Entropy (dep) over time: []

Algorithm 3: Max_Prob
--------------------
Candidates Set: {(8, 14): (np.float64(1.7), np.float64(1.75))}
Execution Time: 19.9577 seconds
API Calls: 30
Entropy (dep) over time: [np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0), np.float64(0.0004), np.float64(0.0005), np.float64(0.0007), np.float64(0.0014), np.float64(0.0533), np.float64(0.2225), np.float64(0.2238), np.float64(0.2107), np.float64(0.1511), 0]

